[1/9] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/line_detection.c.obj
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable line_detection.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/line_detection.bin
[9/9] cd /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/line_detection.bin
line_detection.bin binary size 0xdccd0 bytes. Smallest app partition is 0x100000 bytes. 0x23330 bytes (14%) free.
