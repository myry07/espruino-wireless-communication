[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/line_detection.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable line_detection.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/line_detection.bin
[9/10] cd /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build/line_detection.bin
line_detection.bin binary size 0xdccf0 bytes. Smallest app partition is 0x100000 bytes. 0x23310 bytes (14%) free.
[9/10] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/espruino-wireless-communication/get_camera/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbserial-110 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 8MB 0x0 bootloader/bootloader.bin 0x10000 line_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbserial-110
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 8c:bf:ea:87:b9:b8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x000ecfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13391...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13391 compressed) at 0x00000000 in 0.6 seconds (effective 277.1 kbit/s)...
Hash of data verified.
Compressed 904432 bytes to 557574...
Writing at 0x00010000... (2 %)
Writing at 0x0001ca88... (5 %)
Writing at 0x000260cb... (8 %)
Writing at 0x0002ef69... (11 %)
Writing at 0x00039625... (14 %)
Writing at 0x0003f2eb... (17 %)
Writing at 0x0004528c... (20 %)
Writing at 0x0004b911... (22 %)
Writing at 0x00051b40... (25 %)
Writing at 0x0005996c... (28 %)
Writing at 0x0005fc07... (31 %)
Writing at 0x00065f1a... (34 %)
Writing at 0x0006befc... (37 %)
Writing at 0x00071a71... (40 %)
Writing at 0x0007706e... (42 %)
Writing at 0x0007c000... (45 %)
Writing at 0x00081423... (48 %)
Writing at 0x000867ee... (51 %)
Writing at 0x0008b9d6... (54 %)
Writing at 0x00090b38... (57 %)
Writing at 0x000965e1... (60 %)
Writing at 0x0009c0e2... (62 %)
Writing at 0x000a1a92... (65 %)
Writing at 0x000a7679... (68 %)
Writing at 0x000ad39b... (71 %)
Writing at 0x000b2c51... (74 %)
Writing at 0x000b89bc... (77 %)
Writing at 0x000bec12... (80 %)
Writing at 0x000c433b... (82 %)
Writing at 0x000cb455... (85 %)
Writing at 0x000d4d80... (88 %)
Writing at 0x000da963... (91 %)
Writing at 0x000e0be2... (94 %)
Writing at 0x000e710a... (97 %)
Writing at 0x000eca58... (100 %)
Wrote 904432 bytes (557574 compressed) at 0x00010000 in 14.3 seconds (effective 505.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 412.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
