[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/line_detection/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/line_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/line_detection.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable line_detection.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/line_detection/build/line_detection.bin
[9/10] cd /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/line_detection/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/line_detection/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/espruino-wireless-communication/line_detection/build/line_detection.bin
line_detection.bin binary size 0x556a0 bytes. Smallest app partition is 0x100000 bytes. 0xaa960 bytes (67%) free.
[9/10] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/espruino-wireless-communication/line_detection/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbserial-10 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 8MB 0x0 bootloader/bootloader.bin 0x10000 line_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbserial-10
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 8c:bf:ea:87:b9:b8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00065fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13390...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13390 compressed) at 0x00000000 in 0.6 seconds (effective 280.3 kbit/s)...
Hash of data verified.
Compressed 349856 bytes to 185215...
Writing at 0x00010000... (8 %)
Writing at 0x0001bee7... (16 %)
Writing at 0x0002337d... (25 %)
Writing at 0x00029514... (33 %)
Writing at 0x0002f87d... (41 %)
Writing at 0x0003771f... (50 %)
Writing at 0x0003e118... (58 %)
Writing at 0x00047f40... (66 %)
Writing at 0x0004ed02... (75 %)
Writing at 0x00056f14... (83 %)
Writing at 0x0005cf02... (91 %)
Writing at 0x00063480... (100 %)
Wrote 349856 bytes (185215 compressed) at 0x00010000 in 4.8 seconds (effective 587.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 424.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
